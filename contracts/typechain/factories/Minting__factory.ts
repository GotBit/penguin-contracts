/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Minting, MintingInterface } from "../Minting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nft_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "OGRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "changeDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxQuantity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract IERC721Custom",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ogQuantity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_OGRoot",
        type: "bytes32",
      },
    ],
    name: "saveRootOg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_whitelistRoot",
        type: "bytes32",
      },
    ],
    name: "saveRootWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitlistQuantity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260046005556002600655601460075562093a806008553480156200002757600080fd5b5060405162001b9238038062001b9283398181016040528101906200004d9190620001eb565b6200006d62000061620000b560201b60201c565b620000bd60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200021d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b38262000186565b9050919050565b620001c581620001a6565b8114620001d157600080fd5b50565b600081519050620001e581620001ba565b92915050565b60006020828403121562000204576200020362000181565b5b60006200021484828501620001d4565b91505092915050565b611965806200022d6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637e6a0fbc116100ad578063ba41b0c611610071578063ba41b0c6146102ac578063da7f02ab146102c8578063e640cf7d146102e6578063f0b5336514610304578063f2fde38b1461032257610121565b80637e6a0fbc1461022e5780638da5cb5b1461024a5780639a65ea2614610268578063af00219214610272578063b594f0861461029057610121565b80633e3e0b12116100f45780633e3e0b12146101b057806347ccca02146101ba5780635a9a49c7146101d8578063690a663214610208578063715018a61461022457610121565b80630b97bc86146101265780630fb5a6b4146101445780631e7269c514610162578063386bfc9814610192575b600080fd5b61012e61033e565b60405161013b9190610fc7565b60405180910390f35b61014c610344565b6040516101599190610fc7565b60405180910390f35b61017c60048036038101906101779190611054565b61034a565b6040516101899190610fc7565b60405180910390f35b61019a610362565b6040516101a7919061109a565b60405180910390f35b6101b8610368565b005b6101c26103ee565b6040516101cf9190611114565b60405180910390f35b6101f260048036038101906101ed91906112b4565b610414565b6040516101ff919061133e565b60405180910390f35b610222600480360381019061021d9190611359565b6104c8565b005b61022c61054e565b005b61024860048036038101906102439190611359565b6105d6565b005b61025261065c565b60405161025f9190611395565b60405180910390f35b610270610685565b005b61027a61070a565b6040516102879190610fc7565b60405180910390f35b6102aa60048036038101906102a591906113dc565b610710565b005b6102c660048036038101906102c19190611409565b610796565b005b6102d0610c77565b6040516102dd9190610fc7565b60405180910390f35b6102ee610c7d565b6040516102fb9190610fc7565b60405180910390f35b61030c610c83565b604051610319919061109a565b60405180910390f35b61033c60048036038101906103379190611054565b610c89565b005b60025481565b60085481565b60096020528060005260406000206000915090505481565b60035481565b610370610d81565b73ffffffffffffffffffffffffffffffffffffffff1661038e61065c565b73ffffffffffffffffffffffffffffffffffffffff16146103e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103db906114c2565b60405180910390fd5b6000600281905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008082905060005b85518110156104ba57600086828151811061043b5761043a6114e2565b5b6020026020010151905080831061047a57808360405160200161045f929190611532565b604051602081830303815290604052805190602001206104a4565b828160405160200161048d929190611532565b604051602081830303815290604052805190602001205b92505080806104b29061158d565b91505061041d565b508381149150509392505050565b6104d0610d81565b73ffffffffffffffffffffffffffffffffffffffff166104ee61065c565b73ffffffffffffffffffffffffffffffffffffffff1614610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b906114c2565b60405180910390fd5b8060048190555050565b610556610d81565b73ffffffffffffffffffffffffffffffffffffffff1661057461065c565b73ffffffffffffffffffffffffffffffffffffffff16146105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c1906114c2565b60405180910390fd5b6105d46000610d89565b565b6105de610d81565b73ffffffffffffffffffffffffffffffffffffffff166105fc61065c565b73ffffffffffffffffffffffffffffffffffffffff1614610652576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610649906114c2565b60405180910390fd5b8060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61068d610d81565b73ffffffffffffffffffffffffffffffffffffffff166106ab61065c565b73ffffffffffffffffffffffffffffffffffffffff1614610701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f8906114c2565b60405180910390fd5b42600281905550565b60065481565b610718610d81565b73ffffffffffffffffffffffffffffffffffffffff1661073661065c565b73ffffffffffffffffffffffffffffffffffffffff161461078c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610783906114c2565b60405180910390fd5b8060088190555050565b6107d76040518060400160405280600a81526020017f7374617274206461746500000000000000000000000000000000000000000000815250600254610e4d565b6000600254141580156107f857506008546002546107f591906115d6565b42105b610837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082e90611678565b60405180910390fd5b62015180600254426108499190611698565b1015610b69576000336040516020016108629190611395565b60405160208183030381529060405280519060200120905060006108898360045484610414565b9050600061089a8460035485610414565b90506108a68282610ee9565b81806108af5750805b6108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e590611718565b60405180910390fd5b600082156109105760055486116109055785610909565b6005545b905061092d565b811561092c5760065486116109255785610929565b6006545b90505b5b6109ab6040518060400160405280600681526020017f6d696e7465640000000000000000000000000000000000000000000000000000815250600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e4d565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816109f69190611698565b9050610a376040518060400160405280600381526020017f6d696e000000000000000000000000000000000000000000000000000000000081525082610e4d565b6000811415610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7290611784565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610ad89291906117a4565b600060405180830381600087803b158015610af257600080fd5b505af1158015610b06573d6000803e3d6000fd5b5050505080600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b5991906115d6565b9250508190555050505050610c73565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19336007548511610bb75784610bbb565b6007545b6040518363ffffffff1660e01b8152600401610bd89291906117a4565b600060405180830381600087803b158015610bf257600080fd5b505af1158015610c06573d6000803e3d6000fd5b505050506007548211610c195781610c1d565b6007545b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c6b91906115d6565b925050819055505b5050565b60055481565b60075481565b60045481565b610c91610d81565b73ffffffffffffffffffffffffffffffffffffffff16610caf61065c565b73ffffffffffffffffffffffffffffffffffffffff1614610d05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfc906114c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6c9061183f565b60405180910390fd5b610d7e81610d89565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ee58282604051602401610e639291906118d6565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f85565b5050565b610f818282604051602401610eff929190611906565b6040516020818303038152906040527f2a110e83000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f85565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000819050919050565b610fc181610fae565b82525050565b6000602082019050610fdc6000830184610fb8565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102182610ff6565b9050919050565b61103181611016565b811461103c57600080fd5b50565b60008135905061104e81611028565b92915050565b60006020828403121561106a57611069610fec565b5b60006110788482850161103f565b91505092915050565b6000819050919050565b61109481611081565b82525050565b60006020820190506110af600083018461108b565b92915050565b6000819050919050565b60006110da6110d56110d084610ff6565b6110b5565b610ff6565b9050919050565b60006110ec826110bf565b9050919050565b60006110fe826110e1565b9050919050565b61110e816110f3565b82525050565b60006020820190506111296000830184611105565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61117d82611134565b810181811067ffffffffffffffff8211171561119c5761119b611145565b5b80604052505050565b60006111af610fe2565b90506111bb8282611174565b919050565b600067ffffffffffffffff8211156111db576111da611145565b5b602082029050602081019050919050565b600080fd5b6111fa81611081565b811461120557600080fd5b50565b600081359050611217816111f1565b92915050565b600061123061122b846111c0565b6111a5565b90508083825260208201905060208402830185811115611253576112526111ec565b5b835b8181101561127c57806112688882611208565b845260208401935050602081019050611255565b5050509392505050565b600082601f83011261129b5761129a61112f565b5b81356112ab84826020860161121d565b91505092915050565b6000806000606084860312156112cd576112cc610fec565b5b600084013567ffffffffffffffff8111156112eb576112ea610ff1565b5b6112f786828701611286565b935050602061130886828701611208565b925050604061131986828701611208565b9150509250925092565b60008115159050919050565b61133881611323565b82525050565b6000602082019050611353600083018461132f565b92915050565b60006020828403121561136f5761136e610fec565b5b600061137d84828501611208565b91505092915050565b61138f81611016565b82525050565b60006020820190506113aa6000830184611386565b92915050565b6113b981610fae565b81146113c457600080fd5b50565b6000813590506113d6816113b0565b92915050565b6000602082840312156113f2576113f1610fec565b5b6000611400848285016113c7565b91505092915050565b600080604083850312156114205761141f610fec565b5b600061142e858286016113c7565b925050602083013567ffffffffffffffff81111561144f5761144e610ff1565b5b61145b85828601611286565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114ac602083611465565b91506114b782611476565b602082019050919050565b600060208201905081810360008301526114db8161149f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b61152c61152782611081565b611511565b82525050565b600061153e828561151b565b60208201915061154e828461151b565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061159882610fae565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115cb576115ca61155e565b5b600182019050919050565b60006115e182610fae565b91506115ec83610fae565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116215761162061155e565b5b828201905092915050565b7f4d696e742068617665206e6f7420737461727465642079657400000000000000600082015250565b6000611662601983611465565b915061166d8261162c565b602082019050919050565b6000602082019050818103600083015261169181611655565b9050919050565b60006116a382610fae565b91506116ae83610fae565b9250828210156116c1576116c061155e565b5b828203905092915050565b7f596f752063616e74206d696e7420746865206e6674207269676874206e6f7700600082015250565b6000611702601f83611465565b915061170d826116cc565b602082019050919050565b60006020820190508181036000830152611731816116f5565b9050919050565b7f596f752063616e74206d696e74207a65726f0000000000000000000000000000600082015250565b600061176e601283611465565b915061177982611738565b602082019050919050565b6000602082019050818103600083015261179d81611761565b9050919050565b60006040820190506117b96000830185611386565b6117c66020830184610fb8565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611829602683611465565b9150611834826117cd565b604082019050919050565b600060208201905081810360008301526118588161181c565b9050919050565b600081519050919050565b60005b8381101561188857808201518184015260208101905061186d565b83811115611897576000848401525b50505050565b60006118a88261185f565b6118b28185611465565b93506118c281856020860161186a565b6118cb81611134565b840191505092915050565b600060408201905081810360008301526118f0818561189d565b90506118ff6020830184610fb8565b9392505050565b600060408201905061191b600083018561132f565b611928602083018461132f565b939250505056fea2646970667358221220b0004e3c3d141cf9a2aadb5e3666091a4ec225edcd0a92ff45c9e114d9be004b64736f6c634300080b0033";

export class Minting__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    nft_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Minting> {
    return super.deploy(nft_, overrides || {}) as Promise<Minting>;
  }
  getDeployTransaction(
    nft_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(nft_, overrides || {});
  }
  attach(address: string): Minting {
    return super.attach(address) as Minting;
  }
  connect(signer: Signer): Minting__factory {
    return super.connect(signer) as Minting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintingInterface {
    return new utils.Interface(_abi) as MintingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Minting {
    return new Contract(address, _abi, signerOrProvider) as Minting;
  }
}
