/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ILiquidityRestrictor,
  ILiquidityRestrictorInterface,
} from "../ILiquidityRestrictor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "assureLiquidityRestrictions",
    outputs: [
      {
        internalType: "bool",
        name: "allow",
        type: "bool",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ILiquidityRestrictor__factory {
  static readonly abi = _abi;
  static createInterface(): ILiquidityRestrictorInterface {
    return new utils.Interface(_abi) as ILiquidityRestrictorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILiquidityRestrictor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ILiquidityRestrictor;
  }
}
