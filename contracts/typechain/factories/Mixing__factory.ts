/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Mixing, MixingInterface } from "../Mixing";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nft_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_whiteList",
        type: "bytes32",
      },
    ],
    name: "createWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxQuantity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract IERC721Custom",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ogQuantity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ogs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyOG",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitlistQuantity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260048055600260055560146006553480156200001f57600080fd5b5060405162001545380380620015458339818101604052810190620000459190620001e3565b6200006562000059620000ad60201b60201c565b620000b560201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000215565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ab826200017e565b9050919050565b620001bd816200019e565b8114620001c957600080fd5b50565b600081519050620001dd81620001b2565b92915050565b600060208284031215620001fc57620001fb62000179565b5b60006200020c84828501620001cc565b91505092915050565b61132080620002256000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638da5cb5b116100a2578063ba41b0c611610071578063ba41b0c614610282578063da7f02ab1461029e578063e640cf7d146102bc578063f2fde38b146102da578063fedf229d146102f65761010b565b80638da5cb5b1461020c5780639a65ea261461022a5780639b19251a14610234578063af002192146102645761010b565b80631ea2928d116100de5780631ea2928d146101be5780633e3e0b12146101da57806347ccca02146101e4578063715018a6146102025761010b565b80630b97bc861461011057806315c6cd8f1461012e5780631c024a9f1461015e5780631e7269c51461018e575b600080fd5b610118610326565b6040516101259190610baa565b60405180910390f35b61014860048036038101906101439190610dc6565b61032c565b6040516101559190610e3d565b60405180910390f35b61017860048036038101906101739190610dc6565b610383565b6040516101859190610e3d565b60405180910390f35b6101a860048036038101906101a39190610e58565b6103da565b6040516101b59190610baa565b60405180910390f35b6101d860048036038101906101d39190610e85565b6103f2565b005b6101e2610478565b005b6101ec6104fe565b6040516101f99190610f11565b60405180910390f35b61020a610524565b005b6102146105ac565b6040516102219190610f3b565b60405180910390f35b6102326105d5565b005b61024e60048036038101906102499190610e58565b61065a565b60405161025b9190610e3d565b60405180910390f35b61026c61067a565b6040516102799190610baa565b60405180910390f35b61029c60048036038101906102979190610f82565b610680565b005b6102a66109a1565b6040516102b39190610baa565b60405180910390f35b6102c46109a7565b6040516102d19190610baa565b60405180910390f35b6102f460048036038101906102ef9190610e58565b6109ad565b005b610310600480360381019061030b9190610e58565b610aa5565b60405161031d9190610e3d565b60405180910390f35b60025481565b6000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60076020528060005260406000206000915090505481565b6103fa610ac5565b73ffffffffffffffffffffffffffffffffffffffff166104186105ac565b73ffffffffffffffffffffffffffffffffffffffff161461046e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104659061103b565b60405180910390fd5b8060038190555050565b610480610ac5565b73ffffffffffffffffffffffffffffffffffffffff1661049e6105ac565b73ffffffffffffffffffffffffffffffffffffffff16146104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb9061103b565b60405180910390fd5b6000600281905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61052c610ac5565b73ffffffffffffffffffffffffffffffffffffffff1661054a6105ac565b73ffffffffffffffffffffffffffffffffffffffff16146105a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105979061103b565b60405180910390fd5b6105aa6000610acd565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105dd610ac5565b73ffffffffffffffffffffffffffffffffffffffff166105fb6105ac565b73ffffffffffffffffffffffffffffffffffffffff1614610651576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106489061103b565b60405180910390fd5b42600281905550565b60096020528060005260406000206000915054906101000a900460ff1681565b60055481565b600060025414156106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd906110a7565b60405180910390fd5b62015180600254426106d891906110f6565b10156108fd5760006106ea3383610383565b905060006106f8338461032c565b905081806107035750805b610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611176565b60405180910390fd5b60008215610764576004548511610759578461075d565b6004545b9050610781565b8115610780576005548511610779578461077d565b6005545b90505b5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054816107cc91906110f6565b90506000811415610812576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610809906111e2565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108619190611202565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b81526004016108c39190610baa565b600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b5050505050505061099d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0712d68600654841161094a578361094e565b6006545b6040518263ffffffff1660e01b815260040161096a9190610baa565b600060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050505b5050565b60045481565b60065481565b6109b5610ac5565b73ffffffffffffffffffffffffffffffffffffffff166109d36105ac565b73ffffffffffffffffffffffffffffffffffffffff1614610a29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a209061103b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a90906112ca565b60405180910390fd5b610aa281610acd565b50565b60086020528060005260406000206000915054906101000a900460ff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b610ba481610b91565b82525050565b6000602082019050610bbf6000830184610b9b565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0482610bd9565b9050919050565b610c1481610bf9565b8114610c1f57600080fd5b50565b600081359050610c3181610c0b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c8582610c3c565b810181811067ffffffffffffffff82111715610ca457610ca3610c4d565b5b80604052505050565b6000610cb7610bc5565b9050610cc38282610c7c565b919050565b600067ffffffffffffffff821115610ce357610ce2610c4d565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b610d0c81610cf9565b8114610d1757600080fd5b50565b600081359050610d2981610d03565b92915050565b6000610d42610d3d84610cc8565b610cad565b90508083825260208201905060208402830185811115610d6557610d64610cf4565b5b835b81811015610d8e5780610d7a8882610d1a565b845260208401935050602081019050610d67565b5050509392505050565b600082601f830112610dad57610dac610c37565b5b8135610dbd848260208601610d2f565b91505092915050565b60008060408385031215610ddd57610ddc610bcf565b5b6000610deb85828601610c22565b925050602083013567ffffffffffffffff811115610e0c57610e0b610bd4565b5b610e1885828601610d98565b9150509250929050565b60008115159050919050565b610e3781610e22565b82525050565b6000602082019050610e526000830184610e2e565b92915050565b600060208284031215610e6e57610e6d610bcf565b5b6000610e7c84828501610c22565b91505092915050565b600060208284031215610e9b57610e9a610bcf565b5b6000610ea984828501610d1a565b91505092915050565b6000819050919050565b6000610ed7610ed2610ecd84610bd9565b610eb2565b610bd9565b9050919050565b6000610ee982610ebc565b9050919050565b6000610efb82610ede565b9050919050565b610f0b81610ef0565b82525050565b6000602082019050610f266000830184610f02565b92915050565b610f3581610bf9565b82525050565b6000602082019050610f506000830184610f2c565b92915050565b610f5f81610b91565b8114610f6a57600080fd5b50565b600081359050610f7c81610f56565b92915050565b60008060408385031215610f9957610f98610bcf565b5b6000610fa785828601610f6d565b925050602083013567ffffffffffffffff811115610fc857610fc7610bd4565b5b610fd485828601610d98565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611025602083610fde565b915061103082610fef565b602082019050919050565b6000602082019050818103600083015261105481611018565b9050919050565b7f4d696e742068617665206e6f7420737461727465642079657400000000000000600082015250565b6000611091601983610fde565b915061109c8261105b565b602082019050919050565b600060208201905081810360008301526110c081611084565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110182610b91565b915061110c83610b91565b92508282101561111f5761111e6110c7565b5b828203905092915050565b7f596f752063616e74206d696e7420746865206e6674207269676874206e6f7700600082015250565b6000611160601f83610fde565b915061116b8261112a565b602082019050919050565b6000602082019050818103600083015261118f81611153565b9050919050565b7f596f752063616e74206d696e74207a65726f0000000000000000000000000000600082015250565b60006111cc601283610fde565b91506111d782611196565b602082019050919050565b600060208201905081810360008301526111fb816111bf565b9050919050565b600061120d82610b91565b915061121883610b91565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561124d5761124c6110c7565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006112b4602683610fde565b91506112bf82611258565b604082019050919050565b600060208201905081810360008301526112e3816112a7565b905091905056fea26469706673582212207555b8672ab31af12d3a6cc2994f211fe9b83e96a191713fb89c80074c7b930f64736f6c634300080b0033";

export class Mixing__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    nft_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Mixing> {
    return super.deploy(nft_, overrides || {}) as Promise<Mixing>;
  }
  getDeployTransaction(
    nft_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(nft_, overrides || {});
  }
  attach(address: string): Mixing {
    return super.attach(address) as Mixing;
  }
  connect(signer: Signer): Mixing__factory {
    return super.connect(signer) as Mixing__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MixingInterface {
    return new utils.Interface(_abi) as MixingInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Mixing {
    return new Contract(address, _abi, signerOrProvider) as Mixing;
  }
}
