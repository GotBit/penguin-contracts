/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AssistNFT, AssistNFTInterface } from "../AssistNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "erc721Address",
        type: "address",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getERC721HolderTokens",
    outputs: [
      {
        internalType: "string[]",
        name: "tokenURIs",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc721Address",
        type: "address",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getLastNFT",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d6b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630744ea761461003b5780637c4f5f151461006d575b600080fd5b61005560048036038101906100509190610715565b61009d565b60405161006493929190610978565b60405180910390f35b61008760048036038101906100829190610715565b6104cd565b6040516100949190610a0e565b60405180910390f35b6060806060600085905060008173ffffffffffffffffffffffffffffffffffffffff1663d082e3816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101189190610a5c565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016101559190610a98565b602060405180830381865afa158015610172573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101969190610a5c565b905060008167ffffffffffffffff8111156101b4576101b3610ab3565b5b6040519080825280602002602001820160405280156101e757816020015b60608152602001906001900390816101d25790505b50905060008267ffffffffffffffff81111561020657610205610ab3565b5b6040519080825280602002602001820160405280156102345781602001602082028036833780820191505090505b50905060008367ffffffffffffffff81111561025357610252610ab3565b5b6040519080825280602002602001820160405280156102815781602001602082028036833780820191505090505b5090506000805b868110156104b5578773ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b81526004016102c99190610af1565b602060405180830381865afa1580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030a9190610b21565b73ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614156104a2578773ffffffffffffffffffffffffffffffffffffffff1663c87b56dd826040518263ffffffff1660e01b81526004016103769190610af1565b600060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103bc9190610c45565b8583815181106103cf576103ce610c8e565b5b6020026020010181905250808483815181106103ee576103ed610c8e565b5b6020026020010181815250508773ffffffffffffffffffffffffffffffffffffffff1663e7572230826040518263ffffffff1660e01b81526004016104339190610af1565b602060405180830381865afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104749190610a5c565b83838151811061048757610486610c8e565b5b602002602001018181525050818061049e90610cec565b9250505b80806104ad90610cec565b915050610288565b50838383995099509950505050505050509250925092565b6060600083905060008173ffffffffffffffffffffffffffffffffffffffff1663d082e3816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190610a5c565b9050606060005b82811015610696578373ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b815260040161058d9190610af1565b602060405180830381865afa1580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190610b21565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415610683578373ffffffffffffffffffffffffffffffffffffffff1663c87b56dd826040518263ffffffff1660e01b815260040161063a9190610af1565b600060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106809190610c45565b91505b808061068e90610cec565b91505061054c565b5080935050505092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106e2826106b7565b9050919050565b6106f2816106d7565b81146106fd57600080fd5b50565b60008135905061070f816106e9565b92915050565b6000806040838503121561072c5761072b6106ad565b5b600061073a85828601610700565b925050602061074b85828601610700565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107bb5780820151818401526020810190506107a0565b838111156107ca576000848401525b50505050565b6000601f19601f8301169050919050565b60006107ec82610781565b6107f6818561078c565b935061080681856020860161079d565b61080f816107d0565b840191505092915050565b600061082683836107e1565b905092915050565b6000602082019050919050565b600061084682610755565b6108508185610760565b93508360208202850161086285610771565b8060005b8581101561089e578484038952815161087f858261081a565b945061088a8361082e565b925060208a01995050600181019050610866565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6108ef816108dc565b82525050565b600061090183836108e6565b60208301905092915050565b6000602082019050919050565b6000610925826108b0565b61092f81856108bb565b935061093a836108cc565b8060005b8381101561096b57815161095288826108f5565b975061095d8361090d565b92505060018101905061093e565b5085935050505092915050565b60006060820190508181036000830152610992818661083b565b905081810360208301526109a6818561091a565b905081810360408301526109ba818461091a565b9050949350505050565b600082825260208201905092915050565b60006109e082610781565b6109ea81856109c4565b93506109fa81856020860161079d565b610a03816107d0565b840191505092915050565b60006020820190508181036000830152610a2881846109d5565b905092915050565b610a39816108dc565b8114610a4457600080fd5b50565b600081519050610a5681610a30565b92915050565b600060208284031215610a7257610a716106ad565b5b6000610a8084828501610a47565b91505092915050565b610a92816106d7565b82525050565b6000602082019050610aad6000830184610a89565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610aeb816108dc565b82525050565b6000602082019050610b066000830184610ae2565b92915050565b600081519050610b1b816106e9565b92915050565b600060208284031215610b3757610b366106ad565b5b6000610b4584828501610b0c565b91505092915050565b600080fd5b600080fd5b610b61826107d0565b810181811067ffffffffffffffff82111715610b8057610b7f610ab3565b5b80604052505050565b6000610b936106a3565b9050610b9f8282610b58565b919050565b600067ffffffffffffffff821115610bbf57610bbe610ab3565b5b610bc8826107d0565b9050602081019050919050565b6000610be8610be384610ba4565b610b89565b905082815260208101848484011115610c0457610c03610b53565b5b610c0f84828561079d565b509392505050565b600082601f830112610c2c57610c2b610b4e565b5b8151610c3c848260208601610bd5565b91505092915050565b600060208284031215610c5b57610c5a6106ad565b5b600082015167ffffffffffffffff811115610c7957610c786106b2565b5b610c8584828501610c17565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf7826108dc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2a57610d29610cbd565b5b60018201905091905056fea26469706673582212206c07660e6a90dd17ff67d53ef3c37f6f774fc75732bbd075b71ce341f2eacacb64736f6c634300080b0033";

export class AssistNFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssistNFT> {
    return super.deploy(overrides || {}) as Promise<AssistNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AssistNFT {
    return super.attach(address) as AssistNFT;
  }
  connect(signer: Signer): AssistNFT__factory {
    return super.connect(signer) as AssistNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssistNFTInterface {
    return new utils.Interface(_abi) as AssistNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssistNFT {
    return new Contract(address, _abi, signerOrProvider) as AssistNFT;
  }
}
