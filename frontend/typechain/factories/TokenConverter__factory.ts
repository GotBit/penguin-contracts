/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenConverter,
  TokenConverterInterface,
} from "../TokenConverter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "_defaultRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DEFAULT_FACTORY",
    outputs: [
      {
        internalType: "contract IFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ROUTER",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "checkTokensDistance",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "checkTokensDistanceByFactory",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "checkTokensDistanceByRouter",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertChained",
    outputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertChainedByFactory",
    outputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertChainedByRouter",
    outputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertChainedUniversal",
    outputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertChainedUniversalByFactory",
    outputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertChainedUniversalByRouter",
    outputs: [
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertTwo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertTwoByFactory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "contract IPair",
        name: "_pair",
        type: "address",
      },
    ],
    name: "convertTwoByPair",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertTwoByRouter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertTwoUniversal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertTwoUniversalByFactory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertTwoUniversalByRouter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertViaWETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertViaWETHByFactory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "convertViaWETHByRouter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200225d3803806200225d8339818101604052810190620000379190620002a5565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010c919062000308565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e0919062000308565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200033a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000259826200022c565b9050919050565b60006200026d826200024c565b9050919050565b6200027f8162000260565b81146200028b57600080fd5b50565b6000815190506200029f8162000274565b92915050565b600060208284031215620002be57620002bd62000227565b5b6000620002ce848285016200028e565b91505092915050565b620002e2816200024c565b8114620002ee57600080fd5b50565b6000815190506200030281620002d7565b92915050565b60006020828403121562000321576200032062000227565b5b60006200033184828501620002f1565b91505092915050565b611f13806200034a6000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c80634a2a58de116100b85780637e5f537c1161007c5780637e5f537c146104345780639428f13914610464578063ad5c464814610494578063cb896fba146104b2578063cc77ed5a146104d0578063e73588d91461050057610141565b80634a2a58de146103565780635ad8960d1461038657806361beda6d146103a45780636f95a36d146103d4578063703ae3221461040457610141565b80632cef6ddb1161010a5780632cef6ddb1461023657806334ff4671146102665780633d5a9e6b146102965780633d60755e146102c65780633e2d09ab146102f65780634474bd251461032657610141565b80621c723414610146578063151d2c9d1461017657806315424471146101a65780631ae38325146101d65780632702da6814610206575b600080fd5b610160600480360381019061015b91906114ca565b610530565b60405161016d919061152c565b60405180910390f35b610190600480360381019061018b91906116a0565b6105a6565b60405161019d919061152c565b60405180910390f35b6101c060048036038101906101bb919061173a565b6105dd565b6040516101cd919061152c565b60405180910390f35b6101f060048036038101906101eb91906117a1565b6106a6565b6040516101fd91906117fd565b60405180910390f35b610220600480360381019061021b9190611856565b6106dd565b60405161022d919061152c565b60405180910390f35b610250600480360381019061024b91906114ca565b610778565b60405161025d919061152c565b60405180910390f35b610280600480360381019061027b91906116a0565b6107ee565b60405161028d919061152c565b60405180910390f35b6102b060048036038101906102ab919061173a565b610825565b6040516102bd919061152c565b60405180910390f35b6102e060048036038101906102db91906118bd565b6108ee565b6040516102ed919061152c565b60405180910390f35b610310600480360381019061030b9190611856565b610977565b60405161031d919061152c565b60405180910390f35b610340600480360381019061033b919061192c565b610a21565b60405161034d919061152c565b60405180910390f35b610370600480360381019061036b919061173a565b610ab7565b60405161037d919061152c565b60405180910390f35b61038e610b80565b60405161039b91906119fa565b60405180910390f35b6103be60048036038101906103b991906118bd565b610ba6565b6040516103cb919061152c565b60405180910390f35b6103ee60048036038101906103e9919061192c565b610c2f565b6040516103fb919061152c565b60405180910390f35b61041e600480360381019061041991906114ca565b610cc5565b60405161042b919061152c565b60405180910390f35b61044e60048036038101906104499190611a15565b610d3b565b60405161045b91906117fd565b60405180910390f35b61047e60048036038101906104799190611aa6565b611004565b60405161048b919061152c565b60405180910390f35b61049c6111fa565b6040516104a99190611b08565b60405180910390f35b6104ba611220565b6040516104c79190611b44565b60405180910390f35b6104ea60048036038101906104e59190611856565b611246565b6040516104f7919061152c565b60405180910390f35b61051a60048036038101906105159190611b5f565b61135a565b60405161052791906117fd565b60405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561056e5781905061059f565b61059c600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168585856106dd565b90505b9392505050565b60006105d5600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484610c2f565b905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561061b5781905061069e565b60008573ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190611bc7565b905061069a81868686610977565b9150505b949350505050565b60006106d5600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484610d3b565b905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561071b57819050610770565b6000610728868686610d3b565b905060008160ff161415610740576000915050610770565b60018160ff1614156107605761075886868686611246565b915050610770565b61076c86868686610977565b9150505b949350505050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156107b6578190506107e7565b6107e4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858585611246565b90505b9392505050565b600061081d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484610a21565b905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610863578190506108e6565b60008573ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190611bc7565b90506108e2818686866106dd565b9150505b949350505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561093c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109609190611bc7565b905061096d818585610a21565b9150509392505050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156109b557819050610a19565b60006109e58686600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686611246565b9050610a1586600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168684611246565b9150505b949350505050565b6000819050600283511015610a3557610ab0565b60005b60018451610a469190611c23565b811015610aae57610a9985858381518110610a6457610a63611c57565b5b602002602001015186600185610a7a9190611c86565b81518110610a8b57610a8a611c57565b5b602002602001015185611246565b91508080610aa690611cdc565b915050610a38565b505b9392505050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610af557819050610b78565b60008573ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b669190611bc7565b9050610b7481868686611246565b9150505b949350505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808473ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c189190611bc7565b9050610c25818585610c2f565b9150509392505050565b6000819050600283511015610c4357610cbe565b60005b60018451610c549190611c23565b811015610cbc57610ca785858381518110610c7257610c71611c57565b5b602002602001015186600185610c889190611c86565b81518110610c9957610c98611c57565b5b6020026020010151856106dd565b91508080610cb490611cdc565b915050610c46565b505b9392505050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d0357819050610d34565b610d31600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858585610977565b90505b9392505050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d7a5760009050610ffd565b60008473ffffffffffffffffffffffffffffffffffffffff1663e6a4390585856040518363ffffffff1660e01b8152600401610db7929190611d25565b602060405180830381865afa158015610dd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df89190611bc7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ff75760008573ffffffffffffffffffffffffffffffffffffffff1663e6a4390586600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401610e8e929190611d25565b602060405180830381865afa158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecf9190611bc7565b905060008673ffffffffffffffffffffffffffffffffffffffff1663e6a43905600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518363ffffffff1660e01b8152600401610f30929190611d25565b602060405180830381865afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f719190611bc7565b9050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610fda5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15610feb5760009350505050610ffd565b60029350505050610ffd565b60019150505b9392505050565b60008083141561101757600090506111f3565b60008273ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611064573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110889190611bc7565b90506000808473ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fc9190611dd0565b50915091506000826dffffffffffffffffffffffffffff16148061113057506000816dffffffffffffffffffffffffffff16145b1561114157600093505050506111f3565b8673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156111b657816dffffffffffffffffffffffffffff16816dffffffffffffffffffffffffffff16876111a29190611e23565b6111ac9190611eac565b93505050506111f3565b806dffffffffffffffffffffffffffff16826dffffffffffffffffffffffffffff16876111e39190611e23565b6111ed9190611eac565b93505050505b9392505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561128457819050611352565b60008573ffffffffffffffffffffffffffffffffffffffff1663e6a4390586866040518363ffffffff1660e01b81526004016112c1929190611d25565b602060405180830381865afa1580156112de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113029190611bc7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611343576000915050611352565b61134e858483611004565b9150505b949350505050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611399576000905061141b565b60008473ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140a9190611bc7565b9050611417818585610d3b565b9150505b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061146182611436565b9050919050565b61147181611456565b811461147c57600080fd5b50565b60008135905061148e81611468565b92915050565b6000819050919050565b6114a781611494565b81146114b257600080fd5b50565b6000813590506114c48161149e565b92915050565b6000806000606084860312156114e3576114e261142c565b5b60006114f18682870161147f565b93505060206115028682870161147f565b9250506040611513868287016114b5565b9150509250925092565b61152681611494565b82525050565b6000602082019050611541600083018461151d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115958261154c565b810181811067ffffffffffffffff821117156115b4576115b361155d565b5b80604052505050565b60006115c7611422565b90506115d3828261158c565b919050565b600067ffffffffffffffff8211156115f3576115f261155d565b5b602082029050602081019050919050565b600080fd5b600061161c611617846115d8565b6115bd565b9050808382526020820190506020840283018581111561163f5761163e611604565b5b835b818110156116685780611654888261147f565b845260208401935050602081019050611641565b5050509392505050565b600082601f83011261168757611686611547565b5b8135611697848260208601611609565b91505092915050565b600080604083850312156116b7576116b661142c565b5b600083013567ffffffffffffffff8111156116d5576116d4611431565b5b6116e185828601611672565b92505060206116f2858286016114b5565b9150509250929050565b600061170782611456565b9050919050565b611717816116fc565b811461172257600080fd5b50565b6000813590506117348161170e565b92915050565b600080600080608085870312156117545761175361142c565b5b600061176287828801611725565b94505060206117738782880161147f565b93505060406117848782880161147f565b9250506060611795878288016114b5565b91505092959194509250565b600080604083850312156117b8576117b761142c565b5b60006117c68582860161147f565b92505060206117d78582860161147f565b9150509250929050565b600060ff82169050919050565b6117f7816117e1565b82525050565b600060208201905061181260008301846117ee565b92915050565b600061182382611456565b9050919050565b61183381611818565b811461183e57600080fd5b50565b6000813590506118508161182a565b92915050565b600080600080608085870312156118705761186f61142c565b5b600061187e87828801611841565b945050602061188f8782880161147f565b93505060406118a08782880161147f565b92505060606118b1878288016114b5565b91505092959194509250565b6000806000606084860312156118d6576118d561142c565b5b60006118e486828701611725565b935050602084013567ffffffffffffffff81111561190557611904611431565b5b61191186828701611672565b9250506040611922868287016114b5565b9150509250925092565b6000806000606084860312156119455761194461142c565b5b600061195386828701611841565b935050602084013567ffffffffffffffff81111561197457611973611431565b5b61198086828701611672565b9250506040611991868287016114b5565b9150509250925092565b6000819050919050565b60006119c06119bb6119b684611436565b61199b565b611436565b9050919050565b60006119d2826119a5565b9050919050565b60006119e4826119c7565b9050919050565b6119f4816119d9565b82525050565b6000602082019050611a0f60008301846119eb565b92915050565b600080600060608486031215611a2e57611a2d61142c565b5b6000611a3c86828701611841565b9350506020611a4d8682870161147f565b9250506040611a5e8682870161147f565b9150509250925092565b6000611a7382611456565b9050919050565b611a8381611a68565b8114611a8e57600080fd5b50565b600081359050611aa081611a7a565b92915050565b600080600060608486031215611abf57611abe61142c565b5b6000611acd8682870161147f565b9350506020611ade868287016114b5565b9250506040611aef86828701611a91565b9150509250925092565b611b0281611456565b82525050565b6000602082019050611b1d6000830184611af9565b92915050565b6000611b2e826119c7565b9050919050565b611b3e81611b23565b82525050565b6000602082019050611b596000830184611b35565b92915050565b600080600060608486031215611b7857611b7761142c565b5b6000611b8686828701611725565b9350506020611b978682870161147f565b9250506040611ba88682870161147f565b9150509250925092565b600081519050611bc181611468565b92915050565b600060208284031215611bdd57611bdc61142c565b5b6000611beb84828501611bb2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c2e82611494565b9150611c3983611494565b925082821015611c4c57611c4b611bf4565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c9182611494565b9150611c9c83611494565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cd157611cd0611bf4565b5b828201905092915050565b6000611ce782611494565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d1a57611d19611bf4565b5b600182019050919050565b6000604082019050611d3a6000830185611af9565b611d476020830184611af9565b9392505050565b60006dffffffffffffffffffffffffffff82169050919050565b611d7181611d4e565b8114611d7c57600080fd5b50565b600081519050611d8e81611d68565b92915050565b600063ffffffff82169050919050565b611dad81611d94565b8114611db857600080fd5b50565b600081519050611dca81611da4565b92915050565b600080600060608486031215611de957611de861142c565b5b6000611df786828701611d7f565b9350506020611e0886828701611d7f565b9250506040611e1986828701611dbb565b9150509250925092565b6000611e2e82611494565b9150611e3983611494565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e7257611e71611bf4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611eb782611494565b9150611ec283611494565b925082611ed257611ed1611e7d565b5b82820490509291505056fea2646970667358221220956096a0cf024013a4752d2f61139aa82e3dad55bdca4e8a3c68859b265e116964736f6c634300080b0033";

export class TokenConverter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _defaultRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenConverter> {
    return super.deploy(
      _defaultRouter,
      overrides || {}
    ) as Promise<TokenConverter>;
  }
  getDeployTransaction(
    _defaultRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_defaultRouter, overrides || {});
  }
  attach(address: string): TokenConverter {
    return super.attach(address) as TokenConverter;
  }
  connect(signer: Signer): TokenConverter__factory {
    return super.connect(signer) as TokenConverter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenConverterInterface {
    return new utils.Interface(_abi) as TokenConverterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenConverter {
    return new Contract(address, _abi, signerOrProvider) as TokenConverter;
  }
}
