/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OwnableAndWhitelistble,
  OwnableAndWhitelistbleInterface,
} from "../OwnableAndWhitelistble";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "whitelistUser",
        type: "address",
      },
    ],
    name: "WhitelistAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "whitelistUser",
        type: "address",
      },
    ],
    name: "WhitelistRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newWhitelistUser",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newWhitelistUser",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b37806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638ab1d681146100515780638da5cb5b1461006d578063e43252d71461008b578063f2fde38b146100a7575b600080fd5b61006b600480360381019061006691906107e5565b6100c3565b005b610075610292565b6040516100829190610821565b60405180910390f35b6100a560048036038101906100a091906107e5565b6102b6565b005b6100c160048036038101906100bc91906107e5565b610468565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610151576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610148906108bf565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d49061092b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe0fcf303ba3014f7bddb92283585b57ae29a68f05ceb43d0a0c1b92ad80c613c60405160405180910390a36000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b906108bf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab906109bd565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f67385d0e3f500ff9deddc1292262190d227a7c30ebc71bdf4362662f6493f6ec60405160405180910390a360018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906108bf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055d90610a4f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ec90610ae1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b282610787565b9050919050565b6107c2816107a7565b81146107cd57600080fd5b50565b6000813590506107df816107b9565b92915050565b6000602082840312156107fb576107fa610782565b5b6000610809848285016107d0565b91505092915050565b61081b816107a7565b82525050565b60006020820190506108366000830184610812565b92915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006108a960218361083c565b91506108b48261084d565b604082019050919050565b600060208201905081810360008301526108d88161089c565b9050919050565b7f596f752063616e742072656d6f76652066726f6d2077686974656c6973740000600082015250565b6000610915601e8361083c565b9150610920826108df565b602082019050919050565b6000602082019050818103600083015261094481610908565b9050919050565b7f596f752063616e742061646420746f2077686974656c6973742061646472657360008201527f7320307830000000000000000000000000000000000000000000000000000000602082015250565b60006109a760258361083c565b91506109b28261094b565b604082019050919050565b600060208201905081810360008301526109d68161099a565b9050919050565b7f596f752063616e74207472616e73666572206f776e6572736869707320746f2060008201527f6164647265737320307830000000000000000000000000000000000000000000602082015250565b6000610a39602b8361083c565b9150610a44826109dd565b604082019050919050565b60006020820190508181036000830152610a6881610a2c565b9050919050565b7f596f752063616e74207472616e73666572206f776e6572736869707320746f2060008201527f796f757273656c66000000000000000000000000000000000000000000000000602082015250565b6000610acb60288361083c565b9150610ad682610a6f565b604082019050919050565b60006020820190508181036000830152610afa81610abe565b905091905056fea2646970667358221220432cfb4cc80775c6fbcc549e0347f56d870ebf626f27f8a01a54bfd4eb3806f764736f6c634300080b0033";

export class OwnableAndWhitelistble__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnableAndWhitelistble> {
    return super.deploy(overrides || {}) as Promise<OwnableAndWhitelistble>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OwnableAndWhitelistble {
    return super.attach(address) as OwnableAndWhitelistble;
  }
  connect(signer: Signer): OwnableAndWhitelistble__factory {
    return super.connect(signer) as OwnableAndWhitelistble__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableAndWhitelistbleInterface {
    return new utils.Interface(_abi) as OwnableAndWhitelistbleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnableAndWhitelistble {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OwnableAndWhitelistble;
  }
}
