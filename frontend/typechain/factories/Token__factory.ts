/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fa838038062001fa88339818101604052810190620000379190620004bf565b828281600390805190602001906200005192919062000234565b5080600490805190602001906200006a92919062000234565b50505080600560006101000a81548160ff021916908360ff160217905550620000a8336d314dc6448d9338c15b0a00000000620000b160201b60201c565b50505062000705565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000124576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011b90620005ba565b60405180910390fd5b62000138600083836200022a60201b60201c565b80600260008282546200014c919062000615565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001a3919062000615565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200020a919062000683565b60405180910390a362000226600083836200022f60201b60201c565b5050565b505050565b505050565b8280546200024290620006cf565b90600052602060002090601f016020900481019282620002665760008555620002b2565b82601f106200028157805160ff1916838001178555620002b2565b82800160010185558215620002b2579182015b82811115620002b157825182559160200191906001019062000294565b5b509050620002c19190620002c5565b5090565b5b80821115620002e0576000816000905550600101620002c6565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200034d8262000302565b810181811067ffffffffffffffff821117156200036f576200036e62000313565b5b80604052505050565b600062000384620002e4565b905062000392828262000342565b919050565b600067ffffffffffffffff821115620003b557620003b462000313565b5b620003c08262000302565b9050602081019050919050565b60005b83811015620003ed578082015181840152602081019050620003d0565b83811115620003fd576000848401525b50505050565b60006200041a620004148462000397565b62000378565b905082815260208101848484011115620004395762000438620002fd565b5b62000446848285620003cd565b509392505050565b600082601f830112620004665762000465620002f8565b5b81516200047884826020860162000403565b91505092915050565b600060ff82169050919050565b620004998162000481565b8114620004a557600080fd5b50565b600081519050620004b9816200048e565b92915050565b600080600060608486031215620004db57620004da620002ee565b5b600084015167ffffffffffffffff811115620004fc57620004fb620002f3565b5b6200050a868287016200044e565b935050602084015167ffffffffffffffff8111156200052e576200052d620002f3565b5b6200053c868287016200044e565b92505060406200054f86828701620004a8565b9150509250925092565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005a2601f8362000559565b9150620005af826200056a565b602082019050919050565b60006020820190508181036000830152620005d58162000593565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200062282620005dc565b91506200062f83620005dc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006675762000666620005e6565b5b828201905092915050565b6200067d81620005dc565b82525050565b60006020820190506200069a600083018462000672565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006e857607f821691505b60208210811415620006ff57620006fe620006a0565b5b50919050565b61189380620007156000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b4114610226578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806342966c68146101be57806370a08231146101da57806379cc67901461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e99190610f10565b60405180910390f35b61010c60048036038101906101079190610fcb565b610366565b6040516101199190611026565b60405180910390f35b61012a610384565b6040516101379190611050565b60405180910390f35b61015a6004803603810190610155919061106b565b61038e565b6040516101679190611026565b60405180910390f35b610178610486565b60405161018591906110da565b60405180910390f35b6101a860048036038101906101a39190610fcb565b61049d565b6040516101b59190611026565b60405180910390f35b6101d860048036038101906101d391906110f5565b610549565b005b6101f460048036038101906101ef9190611122565b61055d565b6040516102019190611050565b60405180910390f35b610224600480360381019061021f9190610fcb565b6105a5565b005b61022e610620565b60405161023b9190610f10565b60405180910390f35b61025e60048036038101906102599190610fcb565b6106b2565b60405161026b9190611026565b60405180910390f35b61028e60048036038101906102899190610fcb565b61079d565b60405161029b9190611026565b60405180910390f35b6102be60048036038101906102b9919061114f565b6107bb565b6040516102cb9190611050565b60405180910390f35b6060600380546102e3906111be565b80601f016020809104026020016040519081016040528092919081815260200182805461030f906111be565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600061037a610373610842565b848461084a565b6001905092915050565b6000600254905090565b600061039b848484610a15565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103e6610842565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90611262565b60405180910390fd5b61047a85610472610842565b85840361084a565b60019150509392505050565b6000600560009054906101000a900460ff16905090565b600061053f6104aa610842565b8484600160006104b8610842565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053a91906112b1565b61084a565b6001905092915050565b61055a610554610842565b82610c96565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105b8836105b3610842565b6107bb565b9050818110156105fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f490611379565b60405180910390fd5b61061183610609610842565b84840361084a565b61061b8383610c96565b505050565b60606004805461062f906111be565b80601f016020809104026020016040519081016040528092919081815260200182805461065b906111be565b80156106a85780601f1061067d576101008083540402835291602001916106a8565b820191906000526020600020905b81548152906001019060200180831161068b57829003601f168201915b5050505050905090565b600080600160006106c1610842565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561077e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107759061140b565b60405180910390fd5b610792610789610842565b8585840361084a565b600191505092915050565b60006107b16107aa610842565b8484610a15565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b19061149d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561092a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109219061152f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a089190611050565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7c906115c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610af5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aec90611653565b60405180910390fd5b610b00838383610e6d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d906116e5565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1991906112b1565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c7d9190611050565b60405180910390a3610c90848484610e72565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfd90611777565b60405180910390fd5b610d1282600083610e6d565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8f90611809565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610def9190611829565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e549190611050565b60405180910390a3610e6883600084610e72565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eb1578082015181840152602081019050610e96565b83811115610ec0576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ee282610e77565b610eec8185610e82565b9350610efc818560208601610e93565b610f0581610ec6565b840191505092915050565b60006020820190508181036000830152610f2a8184610ed7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6282610f37565b9050919050565b610f7281610f57565b8114610f7d57600080fd5b50565b600081359050610f8f81610f69565b92915050565b6000819050919050565b610fa881610f95565b8114610fb357600080fd5b50565b600081359050610fc581610f9f565b92915050565b60008060408385031215610fe257610fe1610f32565b5b6000610ff085828601610f80565b925050602061100185828601610fb6565b9150509250929050565b60008115159050919050565b6110208161100b565b82525050565b600060208201905061103b6000830184611017565b92915050565b61104a81610f95565b82525050565b60006020820190506110656000830184611041565b92915050565b60008060006060848603121561108457611083610f32565b5b600061109286828701610f80565b93505060206110a386828701610f80565b92505060406110b486828701610fb6565b9150509250925092565b600060ff82169050919050565b6110d4816110be565b82525050565b60006020820190506110ef60008301846110cb565b92915050565b60006020828403121561110b5761110a610f32565b5b600061111984828501610fb6565b91505092915050565b60006020828403121561113857611137610f32565b5b600061114684828501610f80565b91505092915050565b6000806040838503121561116657611165610f32565b5b600061117485828601610f80565b925050602061118585828601610f80565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111d657607f821691505b602082108114156111ea576111e961118f565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b600061124c602883610e82565b9150611257826111f0565b604082019050919050565b6000602082019050818103600083015261127b8161123f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112bc82610f95565b91506112c783610f95565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112fc576112fb611282565b5b828201905092915050565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b6000611363602483610e82565b915061136e82611307565b604082019050919050565b6000602082019050818103600083015261139281611356565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006113f5602583610e82565b915061140082611399565b604082019050919050565b60006020820190508181036000830152611424816113e8565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611487602483610e82565b91506114928261142b565b604082019050919050565b600060208201905081810360008301526114b68161147a565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611519602283610e82565b9150611524826114bd565b604082019050919050565b600060208201905081810360008301526115488161150c565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115ab602583610e82565b91506115b68261154f565b604082019050919050565b600060208201905081810360008301526115da8161159e565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061163d602383610e82565b9150611648826115e1565b604082019050919050565b6000602082019050818103600083015261166c81611630565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116cf602683610e82565b91506116da82611673565b604082019050919050565b600060208201905081810360008301526116fe816116c2565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611761602183610e82565b915061176c82611705565b604082019050919050565b6000602082019050818103600083015261179081611754565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006117f3602283610e82565b91506117fe82611797565b604082019050919050565b60006020820190508181036000830152611822816117e6565b9050919050565b600061183482610f95565b915061183f83610f95565b92508282101561185257611851611282565b5b82820390509291505056fea26469706673582212203d5282fb98ba50413df12e4aa87be71e8fc4a7b454af4989a2b57e09514d9daa64736f6c634300080b0033";

export class Token__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<Token>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
