/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Dispenser, DispenserInterface } from "../Dispenser";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenConverter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "busd",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BUSD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "dispense",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108c03803806108c08339818101604052810190610032919061011d565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b6107548061016c6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806341976e0914610046578063484f4ea914610076578063bef54a5e14610094575b600080fd5b610060600480360381019061005b919061030d565b6100b0565b60405161006d9190610353565b60405180910390f35b61007e6101fd565b60405161008b919061037d565b60405180910390f35b6100ae60048036038101906100a991906103c4565b610221565b005b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610127919061043d565b600a61013391906105cc565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16621c723460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686846040518463ffffffff1660e01b81526004016101b393929190610617565b602060405180830381865afa1580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f49190610663565b92505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008290508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610261929190610690565b6020604051808303816000875af1158015610280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a491906106f1565b50505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102da826102af565b9050919050565b6102ea816102cf565b81146102f557600080fd5b50565b600081359050610307816102e1565b92915050565b600060208284031215610323576103226102aa565b5b6000610331848285016102f8565b91505092915050565b6000819050919050565b61034d8161033a565b82525050565b60006020820190506103686000830184610344565b92915050565b610377816102cf565b82525050565b6000602082019050610392600083018461036e565b92915050565b6103a18161033a565b81146103ac57600080fd5b50565b6000813590506103be81610398565b92915050565b600080604083850312156103db576103da6102aa565b5b60006103e9858286016102f8565b92505060206103fa858286016103af565b9150509250929050565b600060ff82169050919050565b61041a81610404565b811461042557600080fd5b50565b60008151905061043781610411565b92915050565b600060208284031215610453576104526102aa565b5b600061046184828501610428565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156104f0578086048111156104cc576104cb61046a565b5b60018516156104db5780820291505b80810290506104e985610499565b94506104b0565b94509492505050565b60008261050957600190506105c5565b8161051757600090506105c5565b816001811461052d576002811461053757610566565b60019150506105c5565b60ff8411156105495761054861046a565b5b8360020a9150848211156105605761055f61046a565b5b506105c5565b5060208310610133831016604e8410600b841016171561059b5782820a9050838111156105965761059561046a565b5b6105c5565b6105a884848460016104a6565b925090508184048111156105bf576105be61046a565b5b81810290505b9392505050565b60006105d78261033a565b91506105e283610404565b925061060f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846104f9565b905092915050565b600060608201905061062c600083018661036e565b610639602083018561036e565b6106466040830184610344565b949350505050565b60008151905061065d81610398565b92915050565b600060208284031215610679576106786102aa565b5b60006106878482850161064e565b91505092915050565b60006040820190506106a5600083018561036e565b6106b26020830184610344565b9392505050565b60008115159050919050565b6106ce816106b9565b81146106d957600080fd5b50565b6000815190506106eb816106c5565b92915050565b600060208284031215610707576107066102aa565b5b6000610715848285016106dc565b9150509291505056fea2646970667358221220ab13e7796d3558d553f844251f52820412c54cc8db139781b80deef0a7957ef864736f6c634300080b0033";

export class Dispenser__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tokenConverter_: string,
    busd: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Dispenser> {
    return super.deploy(
      tokenConverter_,
      busd,
      overrides || {}
    ) as Promise<Dispenser>;
  }
  getDeployTransaction(
    tokenConverter_: string,
    busd: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenConverter_, busd, overrides || {});
  }
  attach(address: string): Dispenser {
    return super.attach(address) as Dispenser;
  }
  connect(signer: Signer): Dispenser__factory {
    return super.connect(signer) as Dispenser__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DispenserInterface {
    return new utils.Interface(_abi) as DispenserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Dispenser {
    return new Contract(address, _abi, signerOrProvider) as Dispenser;
  }
}
